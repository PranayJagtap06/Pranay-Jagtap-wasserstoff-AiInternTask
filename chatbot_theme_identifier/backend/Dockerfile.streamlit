FROM python:3.13-slim-bookworm

# Install system dependencies
RUN apt-get update && apt-get install -y neovim \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /backend

# Copy streamlit app code, requirements and install dependencies
COPY requirements-streamlit.txt .
# RUN pip install --no-cache-dir -r requirements.txt
RUN pip install --upgrade pip && \
    pip install --no-cache-dir pip-tools && \
    for i in {1..3}; do \
        pip install --no-cache-dir -r requirements-streamlit.txt && break || \
        echo "Retry attempt $i" && sleep 5; \
    done

# Create a non-root user
# RUN groupadd -r app && \
#     useradd -r -g app -s /bin/bash -d /home/app app

# Copy application code
COPY . /backend
# COPY .streamlit .
# RUN chown -R app:app /app

# Switch to non-root user
# USER app

# Create necessary directories
RUN mkdir -p /backend/data/chroma /backend/data/uploads /.streamlit
    # chown -R app:app /app /.streamlit && \
    # chmod -R 755 /app /.streamlit

# Set environment variable
# ENV HOME="/home/app"
# ENV PATH="${HOME}/.local/bin:${PATH}"
ENV PYTHONPATH=/backend:/backend/app
# ENV PYTHONUNBUFFERED=1
ENV API_URL="http://api:8000/api/v1"
ENV DOCKER_BUILDKIT=1
ENV COMPOSE_HTTP_TIMEOUT=300
ENV COMPOSE_BAKE=true
ENV CHROMA_CACHE_DIR=/backend/.cache/chroma
ENV STREAMLIT_SERVER_MAX_UPLOAD_SIZE=2000
ENV STREAMLIT_BROWSER_GATHER_USAGE_STATS=false

# Mount secret at build time (needed for remote deployment)
# RUN --mount=type=secret,id=GEMINI_API_KEY,mode=0444,required=true \
#     if [ -f "/run/secrets/GEMINI_API_KEY" ]; then \
#     export GEMINI_API_KEY=$(cat /run/secrets/GEMINI_API_KEY); \
#     fi

# Set environment variable to read from container's environment
ENV GEMINI_API_KEY=${GEMINI_API_KEY}

# Expose ports for FastAPI and Streamlit
EXPOSE 8501

# Command to run services
CMD ["streamlit", "run", "main.py", "--server.port", "8501", "--server.address", "0.0.0.0", "--server.enableCORS", "true", "--server.enableXsrfProtection", "true"]
